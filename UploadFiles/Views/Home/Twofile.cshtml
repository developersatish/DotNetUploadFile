


@model UploadFiles.Models.DataModel

@{
    ViewBag.Title = "Twofile";
}
@section css{
    <style>
        .img-preview {
            display: block;
            width: 50%;
            position: relative;
            margin-bottom: 1rem;
        }

            .img-preview .img-del {
                float: right;
                color: red;
                cursor: pointer;
            }
    </style>
}
@using (Html.BeginForm("Submit", "ReportFile", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form-data", @name = "form-data" }))
{

    <div class="form-group">
        @Html.LabelFor(t => t.Name)
        @Html.TextBoxFor(t => t.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.Description)
        @Html.TextAreaFor(t => t.Description, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <div id="img-preview-div"></div>
        <div style="visibility:hidden">
            @Html.TextBoxFor(t => t.File, new { @type = "file", @multiple = "multiple", @name = "uploadfile", @id = "uploadfile" })
            @*@Html.TextBoxFor(t => t.File, new { @type = "file", @multiple = "multiple", @name = Html.NameFor(t=>t.File), @id = Html.IdFor(t=>t.File) })*@
        </div>
        <button type="button" id="uploadbtn" class="btn btn-sm btn-default">Upload File</button>
    </div>

    <button type="button" id="btnSubmit" name="btnSubmit" class="btn btn-default">Submit</button>
}

@section scripts{
    <script>
        let fileData = [];

        $('#img-preview-div').delegate('.img-del', 'click', function () {
            const name = $(this).data('name');
            const size = $(this).data('size');
            const file = fileData.find(t => t.name = name && t.size == size);
            const index = fileData.indexOf(file);
            if (index == 0 && fileData.length == 1) {
                fileData = [];
                $("#MyFile_File").val('');
            } else {
                fileData.splice(index, 1);
            }

            bindFile();

        });

        $('#uploadbtn').click(_ => {
            $("#uploadfile").click();
        });

        $('#btnSubmit').on("click", function () {
            var form = $('#form-data')[0];
            var data = new FormData(form);
            data.delete('File');
            for (var i = 0; i < fileData.length; i++) {
                data.append('File', fileData[i]);
            }

            $.ajax({
                type: "POST",
                enctype: 'multipart/form-data',
                url: "@Url.Action("Submit", "ReportFile")",
                data: data,
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log("SUCCESS : ", data);
                },
                error: function (e) {
                    console.log("ERROR : ", e);
                }
            });
        });
        $("#uploadfile").on("change", function () {

            var totalFiles = Array.from($("#uploadfile").prop("files"));// document.getElementById('uploadfile').files.length;
            if (totalFiles.length > 2 || fileData.length==2) {
                $(this).val('');
                alert("Select only 2 files");
                return false;
            }
            for (var i = 0; i < totalFiles.length; i++) {
                fileData.push(totalFiles[i])
            }
            bindFile();


        });

        function bindFile() {
            $('#img-preview-div').empty();
            for (var i = 0; i < fileData.length; i++) {
                var file = fileData[i];
                $('#img-preview-div').append(`<div class="img-preview"><span class="img-name">${file.name}</span><span data-name='${file.name}' data-size='${file.size}' class="img-del">X</span></div>`);
            }

        }
    </script>

}